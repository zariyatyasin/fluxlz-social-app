import { model_Open } from "@/Redux/Global";
import axios from "axios";

import React, { useState } from "react";
import { useDispatch, useSelector } from "react-redux";

const UploadImage = () => {
  const { currentUser } = useSelector((state) => state.CurrentUser);
  const [file, setFile] = useState();

  const { modelOpen } = useSelector((state) => state.GlobaleState);
  console.log(currentUser);
  const desc = "ljkldjlks";
  const dispatch = useDispatch();
  const handleImageUpload = async () => {
    const data = new FormData();
    data.append("file", file);
    data.append("upload_preset", "postupload");
    try {
      const uploadRes = await axios.post(
        "https://api.cloudinary.com/v1_1/ddrjnijut/image/upload",
        data
      );
      const { url } = uploadRes.data;
      console.log(url);
      await axios.post("http://localhost:3000/api/post/", {
        userId: currentUser.id,
        desc,
        image: url,
      });
    } catch (err) {
      console.log(err);
    }
  };
  return (
    <div
      id="popup-modal"
      className={`fixed z-50 w-full ${
        !modelOpen && "hidden"
      }  flex flex-row min-h-screen top-0 justify-center items-center  `}
    >
      <div
        className=" absolute  w-full bg-slate-900 top-0 min-h-screen opacity-70 "
        onClick={() => dispatch(model_Open())}
      ></div>
      <div className="relative w-full    max-w-md ">
        <div className="relative bg-white rounded-lg shadow dark:bg-gray-700">
          <button
            type="button"
            className="absolute top-3 right-2.5 text-gray-400 bg-transparent hover:bg-gray-200 hover:text-gray-900 rounded-lg text-sm p-1.5 ml-auto inline-flex items-center dark:hover:bg-gray-800 dark:hover:text-white"
            onClick={() => dispatch(model_Open())}
          >
            <svg
              className="w-5 h-5"
              fill="currentColor"
              viewBox="0 0 20 20"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"></path>
            </svg>
            <span className="sr-only">Close modal</span>
          </button>
          <div className="p-6 flex text-center">
            <div>
              <label
                htmlFor="upload"
                className="block text-white bg-blue-400 font-medium rounded-lg text-sm   items-center px-5 py-2.5 text-center mr-2"
              >
                Upload From Device
              </label>
              <input
                id="upload"
                type="file"
                className=" hidden"
                onChange={(e) => setFile(e.target.files[0])}
              />
            </div>
            {file ? (
              <img src={URL.createObjectURL(file)} className="h-32 w-32" />
            ) : (
              <div>Preview</div>
            )}
            <button
              data-modal-hide="popup-modal"
              type="button"
              className="text-white bg-blue-600 font-medium rounded-lg text-sm inline-flex items-center px-5 py-2.5 text-center mr-2"
              onClick={() => handleImageUpload()}
            >
              Genarate Ai Image
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default UploadImage;
